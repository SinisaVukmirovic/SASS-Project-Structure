@use 'sass:math';

$utilities: (
    "padding": (
        "prefix": "p",
        "values": (
            "0": 0,
            "1": $base-padding,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8
        )
    ),
    "margin": (
        "prefix": "m",
        "values": (
            "0": 0,
            "1": $base-margin,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8
        )
    ),
    "margin-top": (
      "prefix": "mt",
      "values": (
        "0": 0,
        "1": $base-margin,
        "2": $base-margin * 2,
        "3": $base-margin * 4,
        "4": $base-margin * 6,
        "5": $base-margin * 8
      ),
    ),
    "margin-bottom": (
      "prefix": "mb",
      "values": (
        "0": 0,
        "1": $base-margin,
        "2": $base-margin * 2,
        "3": $base-margin * 4,
        "4": $base-margin * 6,
        "5": $base-margin * 8
      ),
    ),
    "padding-top": (
      "prefix": "pt",
      "values": (
        "0": 0,
        "1": $base-padding,
        "2": $base-padding * 2,
        "3": $base-padding * 4,
        "4": $base-padding * 6,
        "5": $base-padding * 8
      ),
    ),
    "padding-bottom": (
      "prefix": "pb",
      "values": (
        "0": 0,
        "1": $base-padding,
        "2": $base-padding * 2,
        "3": $base-padding * 4,
        "4": $base-padding * 6,
        "5": $base-padding * 8
      ),
    ),
    "opacity": (
        "prefix": "o",
        "values": (
            "0": 0,
            "10": .2,
            "20": .4,
            "30": .6,
            "40": .8,
            "50": 1
        )
    ),
    "font-size": (
        "prefix": "font",
        "values": (
            "sm": $font-size-sm,
            "md": $base-font-size,
            "lg": $font-size-lg,
            "xl": $font-size-xl,
            "xxl": $font-size-xxl
        )
    ),
    "border-radius": (
        "prefix": "br",
        "values": (
            "sm": math.div($base-border-radius, 2),
            "md": $base-border-radius,
            "lg": $base-border-radius * 2
        )
    ),
    "display": (
      "prefix": "display",
      "values": (
        "n": none,
        "b": block,
        "f": flex,
        "i": inline,
        "i-b": inline-block
      )
    )
);

// generating utility classes
@each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");    
    $values: map-get($map, "values");

    @each $k, $v in $values {
        @if ($k == "default") {
            .#{$prefix} {
                #{$property}: $v;
            }
        } @else {
            .#{$prefix}-#{$k} {
                #{$property}: $v;
            }
        }
    }
}